local ESP = {}
ESP.Settings = {
    Enabled = true,
    ToggleKey = Enum.KeyCode.RightBracket, -- ðŸ”¥ Hotkey Changed to `]`
    BoxColor = Color3.fromRGB(0, 0, 255), -- ðŸ”µ Blue ESP Box
    BoxOutlineColor = Color3.fromRGB(0, 0, 0), -- âš« Black Outline
    OverlayColor = Color3.fromRGB(0, 0, 255), -- ðŸ”µ Blue Transparent Overlay
    HealthBarColor = Color3.fromRGB(255, 0, 0), -- ðŸ”´ Red Health Bar
    TextColor = Color3.fromRGB(0, 0, 255), -- ðŸ”µ Blue Name Tag
    TextOutlineColor = Color3.fromRGB(255, 255, 255), -- âšª White Outline for Name
    LineThickness = 2,
    HealthBarThickness = 4, -- âœ… Increased Thickness for Better Visibility
    Transparency = 0.5, -- 0 = Fully Invisible, 1 = Fully Visible
    OverlayTransparency = 0.2, -- âœ… Transparency for the Modern Effect
    FontSize = 13
}

local UserInputService = game:GetService("UserInputService")
local camera = workspace.CurrentCamera
local runService = game:GetService("RunService")

local function createDrawing(type, properties)
    local success, obj = pcall(Drawing.new, type)
    if not success then return nil end -- Prevents crashes if Drawing API fails
    for k, v in pairs(properties) do obj[k] = v end
    return obj
end

local ESPObjects = {}

function ESP:CreateESP(player)
    if not player or player == game.Players.LocalPlayer or ESPObjects[player] then return end

    ESPObjects[player] = {
        BoxOutline = createDrawing("Square", {Transparency = ESP.Settings.Transparency, Filled = false, Thickness = ESP.Settings.LineThickness + 2, Color = ESP.Settings.BoxOutlineColor}), -- âš« Black Outline
        Box = createDrawing("Square", {Transparency = ESP.Settings.Transparency, Filled = false, Thickness = ESP.Settings.LineThickness, Color = ESP.Settings.BoxColor}),
        Overlay = createDrawing("Square", {Transparency = ESP.Settings.OverlayTransparency, Filled = true, Color = ESP.Settings.OverlayColor}), -- âœ… Modern Transparent Overlay
        Name = createDrawing("Text", {Size = ESP.Settings.FontSize, Color = ESP.Settings.TextColor, Center = true, Outline = false}),
        NameOutline = createDrawing("Text", {Size = ESP.Settings.FontSize, Color = ESP.Settings.TextOutlineColor, Center = true, Outline = true}), -- âœ… White Outline
        HealthBar = createDrawing("Line", {Thickness = ESP.Settings.HealthBarThickness}),
        HealthLabel = createDrawing("Text", {Size = ESP.Settings.FontSize - 2, Color = ESP.Settings.TextOutlineColor, Center = true, Outline = true})
    }
end

function ESP:RemoveESP(player)
    if ESPObjects[player] then
        for _, obj in pairs(ESPObjects[player]) do if obj then obj:Remove() end end
        ESPObjects[player] = nil
    end
end

function ESP:UpdateESP()
    if not ESP.Settings.Enabled then
        for _, objects in pairs(ESPObjects) do
            for _, obj in pairs(objects) do if obj then obj.Visible = false end end
        end
        return
    end

    for player, objects in pairs(ESPObjects) do
        local character = player.Character
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
        local humanoid = character and character:FindFirstChild("Humanoid")

        if character and rootPart and humanoid then
            local vector, onScreen = camera:WorldToViewportPoint(rootPart.Position)

            if onScreen then
                local sizeY = math.clamp(3500 / vector.Z, 50, 350) -- Dynamic box scaling
                local sizeX = sizeY * 0.5
                local x, y = vector.X - (sizeX / 2), vector.Y - (sizeY / 2)

                -- âœ… ESP Box Outline (Black)
                if objects.BoxOutline then
                    objects.BoxOutline.Size = Vector2.new(sizeX, sizeY)
                    objects.BoxOutline.Position = Vector2.new(x, y)
                    objects.BoxOutline.Visible = true
                end

                -- âœ… ESP Box (Blue)
                if objects.Box then
                    objects.Box.Size = Vector2.new(sizeX, sizeY)
                    objects.Box.Position = Vector2.new(x, y)
                    objects.Box.Visible = true
                end

                -- âœ… Transparent Overlay (Modern Style)
                if objects.Overlay then
                    objects.Overlay.Size = Vector2.new(sizeX, sizeY)
                    objects.Overlay.Position = Vector2.new(x, y)
                    objects.Overlay.Visible = true
                end

                -- âœ… Player Name (Blue with White Outline)
                if objects.Name then
                    objects.Name.Position = Vector2.new(vector.X, y - 15)
                    objects.Name.Text = player.Name
                    objects.Name.Visible = true
                end
                if objects.NameOutline then
                    objects.NameOutline.Position = Vector2.new(vector.X + 1, y - 14) -- Slight Offset for Outline Effect
                    objects.NameOutline.Text = player.Name
                    objects.NameOutline.Visible = true
                end

                -- âœ… Thicker Red Health Bar
                if objects.HealthBar then
                    local healthRatio = humanoid.Health / humanoid.MaxHealth
                    local healthHeight = sizeY * healthRatio
                    objects.HealthBar.Color = ESP.Settings.HealthBarColor
                    objects.HealthBar.From = Vector2.new(x - 8, y + sizeY) -- Shifted for better spacing
                    objects.HealthBar.To = Vector2.new(x - 8, y + sizeY - healthHeight)
                    objects.HealthBar.Visible = true
                end

                -- âœ… Health Label
                if objects.HealthLabel then
                    objects.HealthLabel.Position = Vector2.new(x - 15, y + sizeY - 15)
                    objects.HealthLabel.Text = tostring(math.floor(humanoid.Health))
                    objects.HealthLabel.Visible = true
                end

            else
                for _, obj in pairs(objects) do if obj then obj.Visible = false end end
            end
        else
            for _, obj in pairs(objects) do if obj then obj.Visible = false end end
        end
    end
end

function ESP:Enable()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then ESP:CreateESP(player) end
    end

    game.Players.PlayerAdded:Connect(function(player) ESP:CreateESP(player) end)
    game.Players.PlayerRemoving:Connect(function(player) ESP:RemoveESP(player) end)

    task.wait(2) -- âœ… Ensures execution happens after game loads
    runService.RenderStepped:Connect(function() ESP:UpdateESP() end)
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == ESP.Settings.ToggleKey then
        ESP.Settings.Enabled = not ESP.Settings.Enabled
    end
end)

ESP:Enable()
-- âœ… Aimbot Settings
local AimbotEnabled = false -- ðŸ”¥ Press `Z` to Enable/Disable Aimbot
local AimFOV = 145 -- ðŸ”¥ FOV for Precise Targeting
local AimPart = "Head" -- âœ… Change to "HumanoidRootPart", "UpperTorso", etc.

-- âœ… Services
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local camera = workspace.CurrentCamera
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local mouse = localPlayer:GetMouse()

-- âœ… Track When Right Mouse Button is Held
local Aiming = false

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 and AimbotEnabled then -- ðŸ”¥ Right Click Pressed
        Aiming = true
    end
    if input.KeyCode == Enum.KeyCode.Z then -- ðŸ”¥ Press `Z` to Toggle Aimbot
        AimbotEnabled = not AimbotEnabled
        print(AimbotEnabled and "[Aimbot Enabled]" or "[Aimbot Disabled]")
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- ðŸ”¥ Right Click Released
        Aiming = false
    end
end)

-- âœ… Create FOV Circle (Centered on Screen)
local FOVCircle = Drawing.new("Circle")
FOVCircle.Color = Color3.fromRGB(0, 0, 255) -- ðŸ”µ Blue FOV Circle
FOVCircle.Thickness = 1.5
FOVCircle.Radius = AimFOV
FOVCircle.Filled = false
FOVCircle.Transparency = 0.6 -- âœ… Modern Transparency Effect
FOVCircle.Visible = true

-- âœ… Create Blue Crosshair (BIGGER SIZE)
local CrosshairSize = 10 -- ðŸ”¥ Increased Crosshair Size
local CrosshairThickness = 2
local CrosshairColor = Color3.fromRGB(0, 0, 255) -- ðŸ”µ Blue Crosshair

local Crosshair = {
    Vertical = Drawing.new("Line"),
    Horizontal = Drawing.new("Line")
}

for _, line in pairs(Crosshair) do
    line.Thickness = CrosshairThickness
    line.Color = CrosshairColor
    line.Transparency = 1
    line.Visible = true
end

-- âœ… Update Crosshair & FOV Circle Position (Centered)
RunService.RenderStepped:Connect(function()
    local screenCenter = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    FOVCircle.Position = screenCenter -- ðŸ”¥ Centered FOV
    FOVCircle.Radius = AimFOV
    FOVCircle.Visible = AimbotEnabled -- âœ… Only Show FOV When Aimbot is Enabled

    -- âœ… Crosshair Lines (BIGGER SIZE)
    Crosshair.Vertical.From = screenCenter + Vector2.new(0, -CrosshairSize)
    Crosshair.Vertical.To = screenCenter + Vector2.new(0, CrosshairSize)
    Crosshair.Horizontal.From = screenCenter + Vector2.new(-CrosshairSize, 0)
    Crosshair.Horizontal.To = screenCenter + Vector2.new(CrosshairSize, 0)
end)

-- âœ… Get Closest Player in FOV
local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = AimFOV
    local screenCenter = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)

    for _, player in pairs(players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local character = player.Character
            local targetPart = character:FindFirstChild(AimPart) or character:FindFirstChild("HumanoidRootPart")

            if targetPart then
                local screenPoint, onScreen = camera:WorldToViewportPoint(targetPart.Position)
                local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - screenCenter).Magnitude
                
                if onScreen and distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    return closestPlayer
end

-- âœ… INSTANT Lock-On Function (No Smoothing, No Delay, HIGH Precision)
local function instantLock(target)
    if target and target.Character then
        local targetPart = target.Character:FindFirstChild(AimPart) or target.Character:FindFirstChild("HumanoidRootPart")
        if targetPart then
            camera.CFrame = CFrame.new(camera.CFrame.Position, targetPart.Position) -- ðŸ”¥ INSTANT LOCK-ON, NO DELAY
        end
    end
end

-- âœ… Aimbot Loop (Runs When `Z` is Enabled & Right Mouse is Held)
RunService.RenderStepped:Connect(function()
    if AimbotEnabled and Aiming then
        local target = getClosestPlayer()
        if target then
            instantLock(target)
        end
    end
end)
